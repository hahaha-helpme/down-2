{"id":"vhB5","dependencies":[{"name":"/home/frs_veerman/down-app/package.json","includedInParent":true,"mtime":1593264839632}],"generated":{"js":"var ctx = document.getElementById('downChart').getContext('2d');\nvar timeReportsSequence = datalayer.serviceView.downChart.timeReportsSequence; // sequence to localtime en split to arrays\n\nvar localesOptions = {\n  hour: '2-digit',\n  minute: '2-digit',\n  timeZone: Intl.DateTimeFormat().resolvedOptions().timeZone\n};\nvar locales = {\n  languageCode: datalayer.language.code,\n  countryCode: datalayer.country.code\n};\nvar timeLabels = [];\nvar sequenceOfReports = [];\ntimeReportsSequence.forEach(function (date) {\n  var count = date.count;\n  sequenceOfReports.push(count);\n  var time = new Date(date.time).toLocaleTimeString(\"\".concat(locales.languageCode, \"-\").concat(locales.countryCode), localesOptions);\n  timeLabels.push(time);\n});\nvar data = {\n  labels: timeLabels,\n  datasets: [{\n    data: sequenceOfReports,\n    backgroundColor: null,\n    borderColor: null,\n    pointRadius: 0,\n    borderWidth: 3\n  }]\n};\nvar tooltipLabel = datalayer.serviceView.downChart.tooltipLabel;\nvar options = {\n  defaultFontFamily: Chart.defaults.global.defaultFontFamily = '-apple-system, BlinkMacSystemFont, \"Segoe UI\", \"Roboto\", \"Oxygen\", \"Ubuntu\", \"Helvetica Neue\", Arial, sans-serif',\n  responsive: true,\n  aspectRatio: null,\n  tooltips: {\n    mode: 'nearest',\n    intersect: false,\n    callbacks: {\n      label: function label(tooltipItems, data) {\n        return tooltipItems.yLabel + ' ' + tooltipLabel;\n      }\n    }\n  },\n  legend: {\n    display: false\n  },\n  scales: {\n    xAxes: [{\n      display: true,\n      gridLines: {\n        display: false\n      },\n      ticks: {\n        reverse: true,\n        lineHeight: 2.5\n      }\n    }],\n    yAxes: [{\n      display: true,\n      gridLines: {\n        display: false\n      },\n      ticks: {\n        suggestedMin: 0,\n        suggestedMax: 50 //avgOfnumberOfReports*4\n\n      }\n    }]\n  }\n};\nvar chart = new Chart(ctx, {\n  type: 'line',\n  data: data,\n  options: options,\n  plugins: [{\n    id: 'defineDownChartValues',\n    afterLayout: function afterLayout(chart) {\n      var currentStatus = datalayer.service.status;\n\n      (function setAspectRatio() {\n        var windowWidthInEm = window.innerWidth / parseFloat(getComputedStyle(document.querySelector('body'))['font-size']);\n        var aspectRatioNum = 0.725 + windowWidthInEm * (1 / 55);\n        chart.aspectRatio = Math.min(2.25, Math.max(1, aspectRatioNum.toFixed(2)));\n      })();\n\n      function getBorderColor(status) {\n        if (status < 0.5) {\n          return 'rgba(0, 181, 63, 1)';\n        } else if (status >= 0.5 && status <= 0.7) {\n          return 'rgba(255, 102, 0, 1)';\n        } else if (status >= 0.7) {\n          return 'rgba(242,68,68, 1)';\n        }\n      }\n\n      function setborderColor(chart, status) {\n        chart.data.datasets[0].borderColor = getBorderColor(status);\n      }\n\n      setborderColor(chart, currentStatus);\n\n      function getGradientColor(status) {\n        if (status < 0.5) {\n          return ['rgba(0, 181, 63, 0.01)', 'rgba(0, 181, 63, 0.6)'];\n        } else if (status >= 0.5 && status <= 0.7) {\n          return ['rgba(255, 102, 0, 0.01)', 'rgba(255, 102, 0, 0.6)'];\n        } else if (status >= 0.7) {\n          return ['rgba(242,68,68, 0.01)', 'rgba(242,68,68, 0.6)'];\n        }\n      }\n\n      function setGradient(chart, status) {\n        var scales = chart.scales;\n        var color = chart.ctx.createLinearGradient(0, scales['x-axis-0'].top, 0, 0);\n        var chartColors = getGradientColor(status);\n        color.addColorStop(0, chartColors[0]);\n        color.addColorStop(1, chartColors[1]);\n        chart.data.datasets[0].backgroundColor = color;\n      }\n\n      setGradient(chart, currentStatus);\n    }\n  }]\n});"},"sourceMaps":null,"error":null,"hash":"a5d3cd3edd39b3c1d2c4f89f9ca25402","cacheData":{"env":{}}}